---
# coreos group vars

# Droplet creation settings
size_id: 1gb
image_id: coreos-stable
region_id: nyc1
volume_size: 10

# CoreOS login ID
ansible_ssh_user: core

# Where dropins live
dropin_dir_pat: "/etc/systemd/system/%s.service.d"

# Swap partition size, GiB
swap_size:  2

# Container network
container_network_prefix: "{{network_prefix}}.32"
container_network_cidr: "{{container_network_prefix}}.0/24"
container_network_gateway: "{{container_network_prefix}}.1"
freeipa_client_network_addr: "{{container_network_prefix}}.2"

##################################
# Docker

# FreeIPA service principal
docker_service_principal: "docker/{{fqdn}}"

# Docker certs
docker_ssl_dir: "{{data_volume_path}}/docker"
docker_ssl_cacert: "{{docker_ssl_dir}}/ca.pem"
docker_ssl_cert: "{{docker_ssl_dir}}/cert.pem"
docker_ssl_key: "{{docker_ssl_dir}}/key.pem"

# Docker TCP port
docker_tcp_port: "tcp://{{ip_addr}}:2375"

##################################
# Data volume
#
# Used for swap and etcd2 state

# Data volume block device
data_volume_block_device:  "{{ block_device_path_pat % data_volume_name }}"

# Data volume partition
data_volume_device: "{{ data_volume_block_device }}-part2"
data_volume_path: "/media/state"
configs_path: "{{data_volume_path}}/configs"

# Swap partition
swap_device:  "{{ data_volume_block_device }}-part1"

# Systemd unit file names for paths
swap_device_systemd_unit: "{{swap_device|systemd_escape}}.swap"
data_volume_systemd_unit: "{{data_volume_path|systemd_escape}}.mount"


#################################
# Cluster configuration

# etcd2 configuration
etcd2_config_path: "{{ data_volume_path }}/etcd"
serv_cert_file_path: "{{ etcd2_config_path }}/etcd.pem"
serv_key_file_path: "{{ etcd2_config_path }}/etcd-key.pem"
clnt_cert_file_path: "{{ etcd2_config_path }}/client.pem"
clnt_key_file_path: "{{ etcd2_config_path }}/client-key.pem"
ca_cert_file_path: "{{ etcd2_config_path }}/ca.pem"

# Cluster configuration
initial_cluster:
  "{{[groups.coreos_master[0],hostname]|formatmapstr(
  '{0}=https://{0}.%s:2380' % domain_name,',')}}"
initial_cluster_state:
  "{{ (hostname==groups.coreos_master[0])|ternary('new','existing') }}"

