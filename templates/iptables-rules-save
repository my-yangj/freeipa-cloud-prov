# /var/lib/iptables/rules-save
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Forward Docker service ports into containers
#
{%- for ip in docker_ports %}
  {%- for name in docker_ports[ip] %}
# {{name}}
    {%- for portnum in docker_ports[ip][name] %}
      {%- with proto = docker_ports[ip][name][portnum] %}
        {%- if proto == 'both' %}
-A FORWARD ! -i {{network['netif']}} -o {{network['netif']}} -m tcp -p tcp --dport {{portnum}} -j ACCEPT
-A FORWARD ! -i {{network['netif']}} -o {{network['netif']}} -m udp -p udp --dport {{portnum}} -j ACCEPT
        {%- else %}
-A FORWARD ! -i {{network['netif']}} -o {{network['netif']}} -m {{proto}} -p {{proto}} --dport {{portnum}} -j ACCEPT
        {%- endif %}
      {%- endwith %}
    {%- endfor %}
  {%- endfor %}
{%- endfor %}

# loopback traffic
-A INPUT -i lo -j ACCEPT

# existing connections
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -o {{network['netif']}} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -o docker0          -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# container outgoing connections
-A FORWARD -i {{network['netif']}} ! -o {{network['netif']}} -j ACCEPT
-A FORWARD -i docker0          ! -o docker0          -j ACCEPT

# inter-container traffic
-A FORWARD -i {{network['netif']}} -o {{network['netif']}}   -j ACCEPT
-A FORWARD -i docker0              -o docker0                -j ACCEPT

# SSH
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT

{%- if other_ips %}
# etcd2 (client and peer)
-A INPUT -s {{other_ips}} -p tcp -m tcp --dport 2379 -j ACCEPT
-A INPUT -s {{other_ips}} -p tcp -m tcp --dport 2380 -j ACCEPT
# Legacy port
# -A INPUT -s {{other_ips}} -p tcp -m tcp --dport 4001 -j ACCEPT

{%- endif %}
# # IPSec
# -A INPUT -p udp -m udp --dport 4500 -j ACCEPT
# -A INPUT -p udp -m udp --dport 500 -j ACCEPT
# -A INPUT -p 50 -j ACCEPT
# -A INPUT -p 51 -j ACCEPT
# -A INPUT -p ESP -j ACCEPT
# -I INPUT -m policy --dir in --pol ipsec --proto esp -j ACCEPT

# ping
-A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 3 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT
COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:DOCKER - [0:0]
:DOCKER_HA - [0:0]

# DNAT rules for containers
#
{%- for ip in docker_ports %}
  {%- for name in docker_ports[ip] %}
# {{name}}
    {%- for portnum in docker_ports[ip][name] %}
      {%- with proto = docker_ports[ip][name][portnum] %}
        {%- if proto == 'both' %}
-A DOCKER ! -i {{network['netif']}}                   -m tcp       -p tcp       --dport {{portnum}} -j DNAT --to-destination {{ip}}
-A DOCKER ! -i {{network['netif']}}                   -m udp       -p udp       --dport {{portnum}} -j DNAT --to-destination {{ip}}
-A DOCKER   -i {{network['netif']}} -d {{ip_address}} -m tcp       -p tcp       --dport {{portnum}} -j DNAT --to-destination {{ip}}
-A DOCKER   -i {{network['netif']}} -d {{ip_address}} -m udp       -p udp       --dport {{portnum}} -j DNAT --to-destination {{ip}}
        {%- else %}
-A DOCKER ! -i {{network['netif']}}                   -m {{proto}} -p {{proto}} --dport {{portnum}} -j DNAT --to-destination {{ip}}
-A DOCKER   -i {{network['netif']}} -d {{ip_address}} -m {{proto}} -p {{proto}} --dport {{portnum}} -j DNAT --to-destination {{ip}}
        {%- endif %}
      {%- endwith %}
    {%- endfor %}
  {%- endfor %}
{%- endfor %}
#
# DNAT rules for HA proxy
-A DOCKER_HA ! -i {{network['netif']}}                   -m tcp -p tcp --dport 80  -j DNAT --to-destination {{haproxy_ip}}
-A DOCKER_HA ! -i {{network['netif']}}                   -m tcp -p tcp --dport 443 -j DNAT --to-destination {{haproxy_ip}}
-A DOCKER_HA   -i {{network['netif']}} -d {{ip_address}} -m tcp -p tcp --dport 80  -j DNAT --to-destination {{haproxy_ip}}
-A DOCKER_HA   -i {{network['netif']}} -d {{ip_address}} -m tcp -p tcp --dport 443 -j DNAT --to-destination {{haproxy_ip}}


# Packets destined for local addresses may be forwarded to containers
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER

# Outgoing connections
-A POSTROUTING ! -o {{network['netif']}} -s {{network['subnet']}} -j MASQUERADE
-A POSTROUTING ! -o docker0          -s 172.17.0.0/16     -j MASQUERADE

COMMIT

# *mangle
# :PREROUTING ACCEPT [0:0]
# :INPUT ACCEPT [0:0]
# :FORWARD ACCEPT [0:0]
# :OUTPUT ACCEPT [0:0]
# :POSTROUTING ACCEPT [0:0]
# # Dump IPSec-encrypted traffic
# # tcpdump -s 0 -n -i nflog:5
# # https://wiki.strongswan.org/projects/strongswan/wiki/CorrectTrafficDump
# -A PREROUTING -m policy --dir in --pol ipsec -j NFLOG --nflog-group 5
# -A POSTROUTING -m policy --dir out --pol ipsec -j NFLOG --nflog-group 5
# COMMIT

