---
# Provision DigitalOcean hosts

############################################
- name: Create DigitalOcean droplets and block storage
  hosts: coreos
  # This all runs on localhost regardless of whether hosts exist;
  # don't run setup
  gather_facts: False
  connection: local
  tags: create-droplet

  roles:
    # Generate cloud-config for next step
    - role: coreos-ignition-config

    # Create DigitalOcean droplet
    - role: digitalocean-droplet-create

    # Update /etc/hosts with new droplet
    - role: local-etc-hosts

    # Create data volume
    - role: digitalocean-block-storage
      volume_name: "{{data_volume_name}}"
      volume_size: "{{data_volume_size}}"

############################################
- name: Bootstrap ansible on CoreOS
  hosts: coreos
  # No python on host yet; don't run setup
  gather_facts: False
  tags: coreos-bootstrap-python

  roles:
    # Install python and modules needed by Ansible
    - role: ansible-coreos-bootstrap

    - role: coreos-ansible

############################################
- name: Configure CoreOS block storage
  hosts: coreos
  tags: data-volume

  roles:
    # Partition attached disks
    - role: disk-label
      volume_name: data
      device: "{{data_volume_block_device}}"
      partitions:
        - number: 1
          fs_type:  linux-swap
          part_end:  "{{ swap_size }}GiB"
        - number: 2
          part_start:  "{{ swap_size }}GiB"

    # Set up swap on `swap_device`
    - role: swap

    # Set up ext4 fs on data partition
    - role: mkfs-ext4
      device: "{{data_volume_device}}"
      mount_path: "{{data_volume_path}}"

############################################
- name: Deploy etcd
  hosts: coreos
  tags:  etcd-deploy

  roles:

    # Set etcd_ssl_bootstrapped if etcd is already using IPA certs
    - role: etcd-bootstrap-check
      tags: always

    # *** If IPA is not available ***
    # - generate temporary etcd and docker certs
    - role: bootstrap-certs
      when: not etcd_ssl_bootstrapped
      tags: bootstrap-certs
    # - set up temporary DNS server
    - role: bootstrap-dnsmasq
      vars:
        bootstrap_dnsmasq_mode: start
      when: not etcd_ssl_bootstrapped
      tags: bootstrap-dnsmasq

    # *** If IPA IS available ***
    # - generate etcd certs with certmonger
    - role: ipa-certs
      when: etcd_ssl_bootstrapped
      tags: etcd-certs

    # Deploy etcd
    - role: etcd-deploy
      tags: etcd-setup

    # Stop temporary DNS server
    # - If docker containers are running, flannel won't be used
    # - SRV records only needed for joining cluster
    # - A records may be taken from /etc/hosts
    - role: bootstrap-dnsmasq
      vars:
        bootstrap_dnsmasq_mode: stop
      tags: bootstrap-dnsmasq-stop

############################################
- name: Configure Docker networking
  hosts: coreos
  tags: docker-networking

  roles:
    # Configure Calico networking
    - role: calico-deploy
      tags: calico-deploy

    # Configure Docker for Calico:
    # - TLS
    # - Multi-host overlay networking with etcd cluster-store
    # - Calico network
    - role: docker-tls
      tags: docker-tls

    # Expose container ports
    - role: iptables
      tags: iptables
