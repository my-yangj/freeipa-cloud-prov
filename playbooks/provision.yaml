---
# Provision DigitalOcean hosts

############################################
- name: Create DigitalOcean droplets and block storage
  hosts: coreos
  # This all runs on localhost regardless of whether hosts exist;
  # don't run setup
  gather_facts: False
  connection: local
  tags: create-droplet

  roles:
    # Generate cloud-config for next step
    - role: coreos-ignition-config

    # Create DigitalOcean droplet
    - role: digitalocean-droplet-create

    # Update /etc/hosts with new droplet
    - role: local-etc-hosts

    # Create data volume
    - role: digitalocean-block-storage
      volume_name: "{{data_volume_name}}"
      volume_size: "{{data_volume_size}}"

############################################
- name: Bootstrap ansible on CoreOS
  hosts: coreos
  # No python on host yet; don't run setup
  gather_facts: False
  tags: coreos-bootstrap-python

  environment:
    # Path for python utilities from defunctzombie.coreos-bootstrap
    PATH: "/usr/sbin:/usr/bin:/home/core/bin"

  roles:
    # Install python and modules needed by Ansible
    - role: defunctzombie.coreos-bootstrap

    - role: coreos-ansible

############################################
- name: Configure CoreOS block storage
  hosts: coreos
  tags: data-volume

  roles:
    # Partition attached disks
    - role: disk-label
      volume_name: data
      device: "{{data_volume_block_device}}"
      partitions:
        - number: 1
          fs_type:  linux-swap
          part_end:  "{{ swap_size }}GiB"
        - number: 2
          part_start:  "{{ swap_size }}GiB"

    # Set up swap on `swap_device`
    - role: swap

    # Set up ext4 fs on data partition
    - role: mkfs-ext4
      device: "{{data_volume_device}}"
      mount_path: "{{data_volume_path}}"

############################################
- name: Configure etc files
  hosts: coreos
  tags:  etcd-deploy

  roles:
    - role: etc-hosts
      tags: etc-hosts
