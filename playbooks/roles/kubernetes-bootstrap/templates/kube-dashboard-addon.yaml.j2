# From:
# https://github.com/kubernetes/kubernetes/tree/release-1.7/cluster/addons/dashboard
# ...with modifications
#

---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
  labels:
    k8s-app: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    k8s-app: kubernetes-dashboard
  ports:
  - port: 80
    targetPort: 9090

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
  labels:
    k8s-app: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      containers:
      - name: kubernetes-dashboard
        image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.1
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        # Added
        args:
          - --kubeconfig={{k8s_dir}}/kubeconfig.yaml
          - --apiserver-host={{k8s_apiserver_url_remote}}
        # /Added
        ports:
        - containerPort: 9090
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        # Added
        volumeMounts:
          - mountPath: {{k8s_dir}}
            name: k8s
            readOnly: true
        # /Added
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      # Added
      volumes:
        - name: k8s
          hostPath:
            path: {{k8s_dir}}
      # /Added
