---
# Provision FreeIPA Docker container

#################################
# Set up Docker
- name: Pull FreeIPA docker image
  docker_image:
    name: "{{freeipa_docker_image}}"
  register: freeipa_docker_image_pull
  tags:
    - setup

# - name: Debug FreeIPA docker image pull
#   debug:
#     var: freeipa_docker_image_pull
#   tags:
#     - setup

- name: Create FreeIPA container network
  docker_network:
    name: ipa
    driver_options:
      com.docker.network.bridge.name: ipa
    ipam_options:
      subnet: "{{freeipa_network_cidr}}"
      gateway: "{{freeipa_network_gateway}}"
  tags:
    - setup

#################################
# Set up IPA server configuration
- name: Install FreeIPA server config
  template:
    src: ipa-server-install-options.j2
    dest: "{{freeipa_volume_path}}/ipa-server-install-options"
  register: ipa_install_options
  become: true
  when: hostname == master_host
  tags:
    - configure

#################################
# Set up IPA replica configuration
- name: Install FreeIPA replica config
  template:
    src: ipa-replica-install-options.j2
    dest: "{{freeipa_volume_path}}/ipa-replica-install-options"
  register: ipa_install_options
  become: true
  when: hostname != master_host
  tags:
    - configure

- name: Create FreeIPA replica info file on master
  command: "docker exec -i ipa ipa-replica-prepare {{fqdn}}
                 --ip-address {{ip_addr}} --no-reverse"
  delegate_to: "{{master_host}}"
  when: hostname != master_host
  tags:
    - configure

- name: Fetch FreeIPA replica info from master
  fetch:
    src: "{{freeipa_volume_path}}/var/lib/ipa/replica-info-{{fqdn}}.gpg"
    dest: "cache/replica-info-{{fqdn}}.gpg"
  become: true
  delegate_to: "{{master_host}}"
  when: hostname != master_host
  tags:
    - configure

- name: Copy FreeIPA replica info to replica
  copy:
    src: "cache/replica-info-{{fqdn}}.gpg"
    dest: "{{freeipa_volume_path}}/var/lib/ipa/replica-info-{{fqdn}}.gpg"
  become: true
  when: hostname != master_host
  tags:
    - configure

#################################
# Install IPA server/replica
- name:  Check if install is already complete
  stat:
    path: "{{freeipa_volume_path}}/etc/systemd/system/{{ ''
             }}container-ipa.target.wants/ipa-server-upgrade.service"
  register: install_path_stat
  tags:
    - install
    - docker-run-ipa

- name: "Clean out any incomplete prior install--{{item}}"
  # The next step *always* restarts the container for whatever broken
  # reason, the FreeIPA install doesn't cleanly resume after
  # restarting; deal with it by restarting from scratch
  file:
    state: absent
    path: "{{freeipa_volume_path}}/{{item}}"
  with_items:
    - "build-id"
    - "etc"
    - "hostname"
    - "root"
    - "usr"
    - "var"
  become: true
  when: not install_path_stat.stat.exists
  tags:
    - install
    - docker-run-ipa

- name: "Remove any stale ipa container"
  command:  "docker rm ipa"
  failed_when:  false
  register:  docker_rm_ipa
  changed_when:  docker_rm_ipa.rc == 0
  when: not install_path_stat.stat.exists
  tags:
    - install
    - docker-run-ipa

- name: "Template ipa.service"
  template:
    src: ipa.service.j2
    dest: "/etc/systemd/system/ipa.service"
  become: true
  register:  ipa_unit_file
  tags:
    - install
    - docker-run-ipa

- name: "Start ipa.service"
  systemd:
    name: ipa.service
    daemon_reload: yes
    enabled: true
    state: "{{  (ipa_unit_file.changed) |
                 ternary('restarted','started') }}"
  become: true
  tags:
    - install
    - docker-run-ipa

# - name: Debug Docker container
#   debug:
#     var: docker_run
#   when: not install_path_stat.stat.exists
#   tags:
#     - install
#     - docker-run-ipa

- name: Wait for FreeIPA install to complete
  wait_for:
    # This file is updated at the end of the install
    path: "/media/freeipa/etc/openldap/ldap.conf"
    state: present
    search_regex: "^TLS_CACERT /etc/ipa/ca.crt"
    # Install can take almost minutes to install on a 1GB droplet
    timeout: 900
  when: not install_path_stat.stat.exists
  tags:
    - install
    - docker-run-ipa

- name: Wait for FreeIPA service to start
  command: "docker exec ipa systemctl start ipa.service"
  changed_when: False
  when: not install_path_stat.stat.exists
  tags:
    - install
    - docker-run-ipa
