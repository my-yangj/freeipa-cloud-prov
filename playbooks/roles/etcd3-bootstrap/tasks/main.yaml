---
#################################
# Configure etcd on CoreOS
#

#
# Add etcdctl command alias
#
- block:

    - name:  "Check if ~core/.bashrc is a symlink"
      stat:
        path: "/home/core/.bashrc"
      register:  bashrc_stat

    - name:  "Delete ~core/.bashrc symlink"
      file:
        path: "/home/core/.bashrc"
        state: absent
      when:  bashrc_stat.stat.islnk

    - name:  "Copy /usr/share/skel/.bashrc to ~core/.bashrc"
      command: "cp /usr/share/skel/.bashrc /home/core/.bashrc"
      when:  bashrc_stat.stat.islnk

    - name:  Add etcdctl command as alias
      lineinfile:
        dest: "/home/core/.bashrc"
        state: present
        insertafter: EOF
        line: "alias etcdctl='sudo {{etcdctl_command}}'"

  tags:
    - etcdctl-alias

#
# Create SRV records for etcd service discovery
#
- block:

    - name:  Create SRV records for etcd servers and clients
      ipa_dnsrecord:
        name: "_etcd-{{item.role}}-ssl._tcp"
        zone: "{{domain_name}}"
        srvrecord: "{{item.srvrec}}"
        state: exact
        ipa_host: "{{master_fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"
      with_items:
        -
          role: "server"
          srvrec: "{{ groups.freeipa |
                      formatmaplist('0 100 2380 {}.%s.' % domain_name) }}"
        -
          role: "client"
          srvrec: "{{ groups.freeipa |
                   formatmaplist('0 100 2379 {}.%s.' % domain_name) }}"
      # Once per run to install latest list
      run_once: yes
  delegate_to: localhost
  tags:
    - etcd-dns-srv

#
# Configure DNS resolvers to point at FreeIPA
#
- block:
    # Point CoreOS resolver at FreeIPA to read etcd SRV records and
    # resolve member names
    - name: "Template /etc/systemd/resolved.conf with all FreeIPA servers"
      template:
        src: resolved.conf.j2
        dest: /etc/systemd/resolved.conf
      register:  resolved_conf
      vars:
        dns_servers: "{{ groups.coreos }}"

    - name:  "Reload systemd and restart systemd-resolved.service"
      systemd:
        name: systemd-resolved
        daemon_reload: yes
        state: restarted
      when:  resolved_conf.changed

  become: true
  tags:
    - etcd-resolv-conf

#
# Create etcd sub-CA and service certs
#
- name:  "Set facts for creating etcd SSL certs"
  set_fact:
    # Create CA
    ca_name:  "{{etcd_ca}}"
    ca_subject_cn: "{{etcd_ca_subject_cn}}"
    # Create Etcd service cert
    cert_nick:  "etcd_ssl_cert"
    service_principal: "{{etcd_service_principal}}"
    key_bits:  "2048"
    cert_dir: "{{etcd_ssl_dir}}"
    cacert_path:  "{{etcd_ssl_cacert}}"
    cert_path:  "{{etcd_ssl_cert}}"
    key_path:  "{{etcd_ssl_key}}"
    # Create Etcd client cert
    principal:  "{{manager_id}}"
    email_address:  "{{manager_id}}@{{domain_name}}"
    client_cert_dir: "../{{etcd_client_ssl_dir}}"
    client_cacert_path: "../{{etcd_client_ssl_cacert}}"
    client_cert_path: "../{{etcd_client_ssl_cert}}"
    client_key_path: "../{{etcd_client_ssl_key}}"
  tags:
    - etcd-ca
    - etcd-server-cert
    - etcd-client-cert
    - etcd-start

# Create etcd sub-CA
- include: tasks/ipa_sub_ca.yaml
  tags:
    - etcd-ca
    - etcd-start

# Etcd service certs
- include: tasks/ipa_certmonger_certs.yaml
  tags:
    - etcd-server-cert
    - etcd-start

#
# Start etcd-member service
#
- block:

    - name:  "Unmask etcd-member.service"
      systemd:
        name: etcd-member
        masked: false
        enabled: true
        daemon_reload: yes
      register:  etcd_initial_mask

    - name:  "Start etcd-member.service"
      systemd:
        name: etcd-member
        enabled: true
        masked: false
        daemon_reload: yes
        state: restarted
      when:  "cert_tracking.changed or etcd_initial_mask.changed"
      
  become: true
  tags:
    - etcd-start
