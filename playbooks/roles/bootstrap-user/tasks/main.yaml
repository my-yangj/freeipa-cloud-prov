---
###########################
# Create bootstrap user with client cert
#
# During bootstrap, we need a user with a client cert, but admin user
# can't have client cert

#
# Create bootstrap user
#
- block:

    - name: "Create bootstrap user"
      ipa_user:
        name: bootstrap
        state: present
        givenname: Bootstrap
        sn: Bootstrap
        password: "{{freeipa_admin_password}}"
        ipa_host: "{{fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"

    - name: "Add bootstrap user to CA ACL {{user_cert_acl}}"
      ipa_caacl:
        name: "{{user_cert_acl}}"
        user: "bootstrap"
        state: present
        ipa_host: "{{fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"

  delegate_to: localhost
  run_once: True
  tags: bootstrap-user

#
# Create docker sub-CA for Docker authentication
#
- block:

    - name: "Create Docker CA"
      ipa_ca:
        name: "{{docker_ca}}"
        ipacasubjectdn: "{{docker_ca_subject}}"
        description: "Docker cluster CA"
        state: present
        ipa_host: "{{fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"

    - name: "Add Docker CA to CA ACL '{{user_cert_acl}}'"
      ipa_caacl:
        name: "{{user_cert_acl}}"
        ca: "{{docker_ca}}"
        state: present
        ipa_host: "{{fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"

  delegate_to: localhost
  run_once: True
  tags: docker-ca

#
# Generate client cert
#
- name: "Check if cert already exists locally in {{local_docker_client_dir}}"
  stat:
    path: "{{local_docker_client_cert}}"
  register: local_docker_client_cert_stat
  changed_when: not local_docker_client_cert_stat.stat.exists
  delegate_to: localhost
  run_once: True
  tags: bootstrap-client-cert

- name: "Verify docker cert"
  shell: "openssl verify
  -CAfile {{local_docker_client_cert}}
  {{local_docker_client_cacert}} > /dev/null
  && echo yes || echo no"
  delegate_to: localhost
  register: local_docker_client_cert_verify
  changed_when: local_docker_client_cert_verify.stdout == "no"
  run_once: True
  tags: bootstrap-client-cert

- block:

    - name: "Create remote bootstrap client cert directory
             {{bootstrap_client_cert_dir}}"
      file:
        path: "{{bootstrap_client_cert_dir}}"
        state: directory
        mode: 0700
      become: true

    - name: "Create openssl.conf for bootstrap client cert"
      template:
        src: openssl-bootstrap-client.conf.j2
        dest: "{{bootstrap_client_openssl_conf}}"
      become: true

    - name: "Generate bootstrap client cert key in {{bootstrap_client_key}}"
      command: "openssl genrsa -out {{bootstrap_client_key}} 2048"
      args:
        creates: "{{bootstrap_client_key}}"
      become: true

    - name: "Generate bootstrap client certificate request in
                  {{bootstrap_client_req}}"
      command: "openssl req -new
                  -key {{bootstrap_client_key|quote}}
                  -out {{bootstrap_client_req|quote}}
                  -config {{bootstrap_client_openssl_conf|quote}}"
      args:
        creates: "{{bootstrap_client_req}}"
      become: true

    - name: "Fetch cert request from {{bootstrap_client_req}} to
                 /tmp/bootstrap_req.pem"
      fetch:
        src: "{{bootstrap_client_req}}"
        dest: "/tmp/bootstrap_req.pem"
        flat: yes
      become: true

    - name: "Read client cert request fact"
      set_fact:
        cert_req: "{{ lookup('file', '/tmp/bootstrap_req.pem') }}"

    - name: "Generate bootstrap client certificate in IPA"
      ipa_cert:
        req: "{{cert_req}}"
        principal: bootstrap
        cacn: "{{docker_ca}}"
        state: present
        ipa_host: "{{fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"
      delegate_to: localhost
      register: client_cert_req

    - name: "Create local docker directory {{local_docker_client_dir}}"
      file:
        path: "{{local_docker_client_dir}}"
        state: directory
      delegate_to: localhost

    - name: "Dump bootstrap client certificate into {{local_docker_client_cert}}"
      copy:
        content: |
          -----BEGIN CERTIFICATE-----
          {{client_cert_req.cert.certificate}}
          -----END CERTIFICATE-----
        dest: "{{local_docker_client_cert}}"
        force: yes
      delegate_to: localhost

    - name: "Fetch bootstrap docker client SSL key to
                 {{local_docker_client_key}}"
      fetch:
        src: "{{bootstrap_client_key}}"
        dest: "{{local_docker_client_key}}"
        flat: yes
      become: true

    - name: "Restrict read permission on {{local_docker_client_key}}"
      file:
        path: "{{local_docker_client_key}}"
        mode: 0600
      delegate_to: localhost

    - name: "Read docker CA cert"
      ipa_cert:
        cacn: ipa
        principal: "{{docker_ca_subject}}"
        state: present
        ipa_host: "{{fqdn}}"
        ipa_user: "{{ipa_user}}"
        ipa_pass: "{{freeipa_admin_password}}"
      delegate_to: localhost
      # Don't actually create, just read
      # check_mode: yes
      register: docker_ca_cert

    - name: "Dump docker CA cert into {{local_docker_client_cacert}}"
      copy:
        content: |
          -----BEGIN CERTIFICATE-----
          {{docker_ca_cert.cert.certificate}}
          -----END CERTIFICATE-----
        dest: "{{local_docker_client_cacert}}"
        force: yes
      delegate_to: localhost

    - name: "Verify docker cert again"
      command: "openssl verify
      -CAfile {{local_docker_client_cert}}
      {{local_docker_client_cacert}}"
      delegate_to: localhost
      changed_when: False

  when:
    not local_docker_client_cert_stat.stat.exists or
    local_docker_client_cert_verify.changed
  run_once: True
  tags: bootstrap-client-cert
