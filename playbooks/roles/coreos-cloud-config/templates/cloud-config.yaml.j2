#cloud-config

# Docs:
#    https://coreos.com/os/docs/latest/cloud-config.html
# Validate:  use either of these:
#    https://coreos.com/validate/
#    coreos-cloudinit -validate
# `drop-ins`:
#   https://coreos.com/os/docs/latest/using-systemd-drop-in-units.html

hostname: {{fqdn}}

ssh_authorized_keys:
  - {{ ssh_pub_key }}

coreos:
  update:
    # https://coreos.com/os/docs/latest/update-strategies.html
    reboot-strategy: etcd-lock
  locksmith:
    endpoint: https://{{fqdn}}:2379
    etcd_cafile: {{ca_cert_file_path}}
    etcd_certfile: {{clnt_cert_file_path}}
    etcd_keyfile: {{clnt_key_file_path}}
  units:
    #######################################
    # base daemons
    - name: etcd-member.service
      enable: true
      command: start
      drop-ins:
        - name: 10-etcd-config.conf
          content: |
            # https://coreos.com/etcd/docs/latest/op-guide/runtime-configuration.html
            [Service]
            #
            # URLs to listen on for peer and client traffic; use SSL on
            # external interfaces
            Environment="ETCD_LISTEN_CLIENT_URLS=https://$public_ipv4:2379"
            Environment="ETCD_LISTEN_PEER_URLS=https://$public_ipv4:2380"
            #
            # List of member client URLs to advertise to the rest of the
            # cluster
            Environment="ETCD_ADVERTISE_CLIENT_URLS=https://{{fqdn}}:2379"
            #
            # Initial flags for bootstrapping new member (not used in
            # restarts); use either DNS srv records or manually
            # specify the initial cluster members
            Environment="ETCD_DISCOVERY_SRV={{domain_name}}"
            #Environment="ETCD_INITIAL_CLUSTER={{initial_cluster}}"
            Environment="ETCD_INITIAL_CLUSTER_STATE={{initial_cluster_state}}"
            Environment="ETCD_INITIAL_CLUSTER_TOKEN=cluster_{{etcd_cluster_token}}"
            Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS=https://{{fqdn}}:2380"
            #
            # Exit (do not proxy) when discovery fails
            Environment="ETCD_DISCOVERY_FALLBACK=exit"
            #
            # SSL cert file locations for client and peer servers; enable
            # cert-based authentication
            Environment="ETCD_CERT_FILE={{serv_cert_file_path}}"
            Environment="ETCD_KEY_FILE={{serv_key_file_path}}"
            Environment="ETCD_CLIENT_CERT_AUTH=1"
            Environment="ETCD_TRUSTED_CA_FILE={{ca_cert_file_path}}"
            Environment="ETCD_PEER_CERT_FILE={{clnt_cert_file_path}}"
            Environment="ETCD_PEER_KEY_FILE={{clnt_key_file_path}}"
            Environment="ETCD_PEER_CLIENT_CERT_AUTH=1"
            Environment="ETCD_PEER_TRUSTED_CA_FILE={{ca_cert_file_path}}"
            #
            # Reject reconfiguration requests that would cause quorum loss
            Environment="ETCD_STRICT_RECONFIG_CHECK=1"
            #
            # Tune raft elections
            # https://coreos.com/etcd/docs/latest/tuning.html#time-parameters
            Environment="ETCD_HEARTBEAT_INTERVAL=300"
            Environment="ETCD_ELECTION_TIMEOUT=3000"
            #
            # Drop the default log level to DEBUG for all subpackages
            #Environment="ETCD_DEBUG=1"
            #
            # Set individual etcd subpackages to specific log levels
            #Environment="ETCD_LOG_PACKAGE_LEVELS=etcdserver=WARNING,security=DEBUG"
    # Mask legacy etcd v1/v2 services so they do not accidentally start
    - name: etcd.service
      mask: true
    - name: etcd2.service
      mask: true
      # Remote API access?
        # https://coreos.com/os/docs/latest/customizing-docker.html#enable-the-remote-api-on-a-new-socket
    - name: iptables-restore.service
      enable: true
      command: start
      drop-ins:
        - name: 40-iptables-restore-source.conf
          content: |
            [Unit]
            Requires={{data_volume_systemd_unit}}
            After={{data_volume_systemd_unit}}
            [Service]
            ExecStartPre=/usr/bin/ln -sf \
                {{data_volume_path}}/iptables/rules-save \
                /var/lib/iptables/rules-save
    #######################################
    # disk
    #
    # This requires a DO volume with two partitions, swap and ext4
    # filesystem
    - name: {{swap_device_systemd_unit}}
      command: start
      content: |
        [Swap]
        What={{swap_device}}

        [Install]
        WantedBy=multi-user.target
    - name: {{data_volume_systemd_unit}}
      command: start
      content: |
        [Mount]
        What={{data_volume_device}}
        Where={{data_volume_path}}
        Type=ext4

        [Install]
        WantedBy=multi-user.target
    - name: update-config.service
      enable: true
      command: start
      content: |
        [Unit]
        Description=Update configuration files from data directory
        DefaultDependencies=no
        After={{data_volume_systemd_unit}}
        Before=sysinit.target

        [Install]
        WantedBy=sysinit.target

        [Service]   
        Type=oneshot
        RemainAfterExit=yes
        ExecStart={{data_volume_path}}/configs/update-config
    #######################################
    # Other system units
    #
    - name: ntpd.service
      enable: true
      command: start
    #
    # - name: ntpdate.service
    #   enable: true
    #   command: start

write_files:

  - path: /home/core/.toolboxrc
    # https://coreos.com/os/docs/latest/install-debugging-tools.html
    content: |
      TOOLBOX_DOCKER_IMAGE={{freeipa_docker_client_image_base}}
      TOOLBOX_DOCKER_TAG={{freeipa_docker_client_image_tag}}
      TOOLBOX_USER=root

  - path: /home/core/.docker/config.json
    # Allow default detachKeys to be overridden
    content: |
      {
        "detachKeys": "{{docker_detach_keys|default('ctrl-p,ctrl-q')}}"
      }

