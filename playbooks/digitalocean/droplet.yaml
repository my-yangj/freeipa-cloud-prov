---
- include: ssh_keys.yaml
  when: my_rsa_ssh_key is not defined

- name: DigitalOcean droplets--Create
  hosts: localhost
  roles:
    - coreos

  vars:
    do_token: "{{ lookup('env', 'DO_API_KEY') }}"
    initial_cluster:
      "{{groups.coreos|mapformat('{0}=https://{0}:2380',',')}}"
    initial_cluster_state:
      "{{ ('coreos_master' in hostvars[item].group_names)|ternary('new','existing') }}"
    serv_cert_file_path: /media/state/etcd/etcd.pem
    serv_key_file_path: /media/state/etcd/etcd-key.pem
    clnt_cert_file_path: /media/state/etcd/client.pem
    clnt_key_file_path: /media/state/etcd/client-key.pem
    ca_cert_file_path: /media/state/etcd/ca.pem
    host_id:
      "{{ item | regex_replace('\\..*','') }}"

  tasks:

    # - name:  debug cloud-config
    #   debug:
    #     msg: "{{ lookup('template', 'files/cloud-config.yaml.j2') }}"
    #     verbosity: 3
    #   with_items: "{{ groups.coreos_master }}"

    - name: provision cluster droplets
      digital_ocean:
        state: present
        command: droplet
        ssh_key_ids: "{{ my_rsa_ssh_key.ssh_key.id }}"
        name: "{{ item }}"
        api_token:  "{{ do_token }}"
        size_id: "{{ hostvars[item].size_id }}"
        region_id: "{{ hostvars[item].region_id }}"
        image_id: "{{ hostvars[item].image_id }}"
        user_data: "{{ lookup('template', 'files/cloud-config.yaml.j2') }}"
        unique_name: yes
        wait_timeout: 500
      with_items: "{{ groups.coreos }}"
      register:  "droplet_provisioning"

    # - name:  debug provisioning
    #   debug:
    #     var: "droplet_provisioning"
    #     verbosity: 2

    - name: save droplet facts
      droplet_facts: 
        droplets : "{{ droplet_provisioning }}"
      register:  droplet_facts

    # - name:  debug droplet facts
    #   debug:
    #     var: droplets
    #     verbosity: 3
